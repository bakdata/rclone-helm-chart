{{- $root := . -}}
{{- if .Capabilities.APIVersions.Has "batch/v1/CronJob" }}
apiVersion: batch/v1
{{- else }}
apiVersion: batch/v1beta1
{{- end }}
kind: CronJob
metadata:
  name: {{ include "rclone-copy.fullname" . }}
{{- if .Values.annotations }}
  annotations:
  {{- range $key, $value := .Values.annotations }}
    {{ $key | quote }}: {{ $value | quote }}
  {{- end }}
{{- end }}
  labels:
    {{- include "rclone-copy.labels" . | nindent 4 }}
    {{- range $key, $value := .Values.labels }}
    {{ $key }}: {{ $value }}
    {{- end }}
spec:
  suspend: {{ .Values.suspend }}
  schedule: "{{ .Values.schedule }}"
  successfulJobsHistoryLimit: {{ .Values.successfulJobsHistoryLimit }}
  failedJobsHistoryLimit: {{ .Values.failedJobsHistoryLimit }}
  concurrencyPolicy: Replace
  jobTemplate:
    metadata:
      labels:
        {{- include "rclone-copy.selectorLabels" . | nindent 8 }}
        {{- range $key, $value := .Values.labels }}
        {{ $key }}: {{ $value }}
        {{- end }}
    spec:
      template:
        metadata:
        {{- if .Values.podAnnotations }}
          annotations:
          {{- range $key, $value := .Values.podAnnotations }}
            {{ $key | quote }}: {{ $value | quote }}
          {{- end }}
        {{- end }}
          labels:
            {{- include "rclone-copy.selectorLabels" . | nindent 12 }}
            {{- range $key, $value := .Values.podLabels }}
            {{ $key }}: {{ $value }}
            {{- end }}
        spec:
          {{- if .Values.serviceAccountName }}
          serviceAccountName: {{ .Values.serviceAccountName }}
          {{- end }}
          {{- if .Values.tolerations }}
          tolerations:
{{ toYaml .Values.tolerations | indent 12 }}
          {{- end }}
          {{- with .Values.affinity }}
          affinity:
            {{- tpl (toYaml .) $root | nindent 12 }}
          {{- end }}
          containers:
          - name: {{ .Chart.Name }}
            image: rclone/rclone:{{ .Values.imageRelease }}
            imagePullPolicy: {{ .Values.imagePullPolicy | quote }}

            command:
              - /bin/sh
            args:
              - -c
              # copy as workaround for rclone.conf read only (see https://github.com/rclone/rclone/issues/3655)
              - >-
                {{- range $key, $value := .Values.passwordSecrets }}
                {{ printf "export %s=$(rclone obscure $UNOBSCURED_%s) &&" $key $key }}
                {{- end }}
                cp /root/.config/rclone/rclone_ro.conf /root/.config/rclone/rclone.conf &&
                rclone {{ .Values.command }} -v {{ .Values.arguments | join " " }} --include-from /root/include-pattern.conf "{{ include "rclone-copy.getSourceOrUrl" . }}" "{{ .Values.sync.dest.name }}:{{ .Values.sync.dest.path }}"

            volumeMounts:
              - name: {{ .Values.secretConfig | ternary "secret-config" "config" }}
                # This is the default path where the rclone implementation assumes the config is located
                mountPath: "/root/.config/rclone/rclone_ro.conf"
                subPath: "rclone.conf"
              - name: config
                mountPath: "/root/include-pattern.conf"
                subPath: "include-pattern.conf"

            resources:
{{ toYaml .Values.resources | indent 14 }}

            {{- if or .Values.configPassword .Values.secretRefs .Values.passwordSecrets }}
            env:
            {{- if .Values.configPassword }}
              - name: RCLONE_CONFIG_PASS
                valueFrom:
                  secretKeyRef:
                    name: {{ include "rclone-copy.fullname" . }}
                    key: password
            {{- end }}
            {{- range $key, $value := .Values.secretRefs }}
              - name: "{{ $key }}"
                valueFrom:
                  secretKeyRef:
                    name: {{ $value.name }}
                    key: "{{ $value.key }}"
            {{- end }}
            {{- range $key, $value := .Values.passwordSecrets }}
              - name: {{ printf "UNOBSCURED_%s" $key | quote }}
                valueFrom:
                  secretKeyRef:
                    name: {{ $value.name }}
                    key: "{{ $value.key }}"
            {{- end }}
            {{- end }}

          restartPolicy: {{ .Values.restartPolicy }}
          volumes:
            {{- if .Values.secretConfig }}
            - name: secret-config
              secret:
                secretName: {{ include "rclone-copy.fullname" . }}
            {{- end }}
            - name: config
              configMap:
                name: {{ include "rclone-copy.fullname" . }}
      backoffLimit: {{ .Values.backoffLimit }}
